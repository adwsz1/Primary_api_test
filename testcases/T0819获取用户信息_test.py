# NOTE: Generated By HttpRunner v3.0.12
# FROM: har/0819获取用户信息.har

from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseT0819获取用户信息(HttpRunner):
    config = Config("testcase description").verify(False)

    teststeps = [
        Step(
            RunRequest("/primary_account/passport/getUserInfo")
            .get(
                "https://api-primary.yangcong345.com/primary_account/passport/getUserInfo"
            )
            .with_params(
                **{
                    "sign": "02D05512165F71116C8A527532F31CF35F3CCD36primary",
                    "context": "VTJGc2RHVmtYMSt4OThUa29qZzBpTVd3VERob3RPTXpPeGZqdkZ5elFoZVB5V0dPeE85R1JaVmtlaVBaaTIxYg==",
                    "crypto": "true",
                }
            )
            .with_headers(
                **{
                    "authorization": "eyJhbGciOiJIUzI1NiJ9.eyJ5aWQiOiI1ZGMyODY1MDFlODZmMDBmNWY0OWZiNjciLCJwaG9uZSI6IjE4NDA0OTEyNzY5IiwicGxhdGZvcm0iOiJ1bmtub3duIiwid2VjaGF0SWQiOjM3MzM4NSwiZXhwIjoxNjI4NjEyMTY2fQ.ozxQjBeVxEEuxykRMiis_RM22lG_4Y21lb0LJSHtJPI",
                    "user-agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1",
                    "x-crypto-api": "true",
                    "accept": "*/*",
                    "origin": "https://yangcong345.com",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://yangcong345.com/pg/e?planId=131&ycfrom=xsapp-1",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal(
                "body.sign", "8F3FD2A8CF045191F4FFE76576F3CC915F3CCD72primary"
            )
            .assert_equal(
                "body.context",
                "VTJGc2RHVmtYMTg1NzNwS29jTHNpd2M1Y0RidmdQTHBRYnhkZXZQYWI5Z21vUkQrNUczSWFwdVVYRnk0SEZ0RFcwZXlFZCtSSEtOWTh6V3EvWkFJYkV6VTdXL055Nm9UVUlzbXRETkh2bmpsMmNPNGNSdXM2M1lYWVdBSGt0c0pzdUZXN3ZHL3BFTHFMWG1PUzdvaTVEWXBGL1BldHMyNDhYc3FhMmtuSXdtWG1hVDhKdkdvd3U4bDJuZGxNaXpieXdNR1pockw5Skp0bjlMTmpVaEVmQ3ZndDV1SWNQL2hIV3dXazRDVHk0NHo0S1VMWU1MWG1hT1RZRUpod2RsTDdTUms1bzhqNldncm1GUUU2ZnVhSjJqak1iOUtmODhtVXBKMVVhM1N0Q3lGQ3hpN2hKQUZqU0NVcFAyTTZhemE2cHRsK2hlVzNRQkJCS1AvVURIMy82Nnp2UmFKaWR3bjNwZnJGdWwvV1IrVmpETjRxNmowWmY3N1h5SFl6WEc0TUlsMjRBQnBSQ0ovZkV2aG1wNlJNbmd5NUM3VjRtZzFlT09GMjhlS1p1aFlsNlIyMkEycC9iS05RN3BuMWJPZm1KK1RwMGozdWJRSHF6RVNoMzV0MUpaUGRlNGlxUmlpdVJiaE9pL3haSTdib0psYmFsVzZsUWpVUmF0cHFaeTdPNC9iVXpxL1J6eEpyaDZLQkZ1bHQrYTlheFVmYnZDNW9MR3ozRmV0ZVk4QWx0aEdyNjhpM2t2cHM1Z1ZKaVpuTFoycjFETGk1aWZhNnJsb1V2YWRmTTlYRW51TU9FWGVhTnkyTDZXVEo5U0cwcnY1aWxFVVRlMTJDRTdaSFR4Sk44elZSNmRDZVZEYnAwNVN2MC9mQ3pQbzB3c3ppTXcvOU44aHVwcDJ2dVBETzN2QnMvMHlqSExQR1lBVG9uSnlCZ2Erc1hvY0JMVTlOLzFiQTVqM0NmcTM3OUMvSGxTeXd5c2xWeEs2YWFlZU1sYTBRZmg3SHU5KzBtTnVZMzZHSW9USGh3OHJmVGovZkNxeVdpRUEzSEJzdjVYYzRpR1hQWDZQL3NQTkRvMGVXNWkrTWJsem9sREVHVzNMME4zSHhzaC9oL0xEdGdvY2RUejZpTmVqS01BSjR0bzNmREViY0U3OGxJSmE3VTNxWkJwTVdTVHg1WTVrN25oYXY0L0lCdFdGbWcxYlhCcUlxdXBLZHZFeWVEbGwzc29MWlNRSjZPVUkzRDV1VlRGeFFEeG9NSi9sRkNtZVRYR2xFZ3lWU3IvNWl6UTlWREtDZlRFVE82ZHBlZjliUGlGUUZWa3laa0lWSEgyTG1vUTM3RlY3M3pVaUJEN21hTllwVnlqd3ByajJrUmFvUWYwamtubWFwSDBESzkwWXZwd1Z5b0hEVWZTKzBqT1lqOVFCcXBYWWFmZ2hIaUdNT0F2RnFVN2Rsbi9SLzVvd3JGVDVkcmpkcWxvY1l3a1ljRThZWFN2OE1WU2NpMDZ6cHlCOGVoang2WHJvOWFMNzFrUy9jd0R6Z0RVTVFSUk9QL280dXpKSVpoM29zQT09",
            )
            .assert_equal("body.crypto", True)
        ),
    ]


if __name__ == "__main__":
    TestCaseT0819获取用户信息().test_start()
